stages:
- build
- test
- deploy

image: debian:stable

default:
  before_script:
    - apt update -y
    - apt dist-upgrade -y
    - apt install -y python3-pip git

    - pip3 install --user -U virtualenv pip
    - export PATH=~/.local/bin:$PATH
    
    - virtualenv ~/venv
    - source ~/venv/bin/activate

    - pip install -U pip

    - mkdir -p ~/.pip

test-fs:
  stage: test
  script:
    - pip install .

    - export RFSTOOLS_CONNECTION_TYPE=FS
 #   - ./tests/generic-tests

test-sftp:
  stage: test
  script:
    - pip install .

    - apt install -y openssh-server
    - ssh-keygen -f ~/.ssh/id_rsa -N ''
    - cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
    - chmod og-wx ~/.ssh/authorized_keys

    - mkdir -p /run/sshd
    - /usr/sbin/sshd
    - export RFSTOOLS_CONNECTION_TYPE=SFTP
    - export RFSTOOLS_HOST=localhost
    - export RFSTOOLS_USERNAME=root
    - export RFSTOOLS_NO_HOST_KEY_CHECKING=TRUE

#    - ./tests/generic-tests

  
test-smb12:
  stage: test
  script:
    - pip install .

    - apt install -y samba
    - mkdir -p /samba/tmp
    - chmod 1777 /samba/tmp
    - cat < $TEST_SMB_CONFIG > /etc/samba/smb.conf
    - testparm /etc/samba/smb.conf
    - smbd -D
    - nmbd -D
    - sleep 10
    
    - smbstatus

    - export RFSTOOLS_CONNECTION_TYPE=SMB12
    - export RFSTOOLS_HOST=127.0.0.1
    - export RFSTOOLS_USERNAME=testing
    - export RFSTOOLS_PASSWORD=testing
    - export RFSTOOLS_PORT=445
    - export RFSTOOLS_SERVICE_NAME=share
    - export RFSTOOLS_USE_DIRECT_TCP=true

#    - ./tests/generic-tests


test-smb23:
  stage: test
  script:
    - pip install .

    - apt install -y samba
    - mkdir -p /samba/tmp
    - chmod 1777 /samba/tmp
    - cat < $TEST_SMB_CONFIG > /etc/samba/smb.conf
    - testparm /etc/samba/smb.conf
    - smbd -D
    - nmbd -D
    - sleep 10
    
    - smbstatus
    
    - | 
      smbpasswd -a root -s <<EOF
      testing
      testing
      EOF

    - export RFSTOOLS_CONNECTION_TYPE=SMB23
    - export RFSTOOLS_HOST=127.0.0.1
    - export RFSTOOLS_USERNAME=root
    - export RFSTOOLS_PASSWORD=testing
    - export RFSTOOLS_SERVICE_NAME=share
    - export RFSTOOLS_DISABLE_SECURE_NEGOTIATE=True
    - export RFSTOOLS_DEBUG=False
    - export RFSTOOLS_VERBOSE=True

#    - ./tests/generic-tests


# test:
#  script:
#    - python setup.py test
#    - pip install tox flake8  # you can also use tox
#    - tox -e py36,flake8

build:
  stage: build
  script:
    - python setup.py sdist bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*.tar.gz
    # run the command here
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 4 weeks

deploy:
  stage: deploy
  environment: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://git.profinit.eu/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

# pages:
 # stage: build
 # script:
 #   - pip install sphinx sphinx-rtd-theme
 #   - cd doc ; make html
 #   - mv build/html/ ../public/
 # artifacts:
 #   paths:
 #     - public
 # rules:
 #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

